on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

name: Continuous integration

env:
  CARGO_INCREMENTAL: 0

jobs:
  ci-linux:
    name: Build and test (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        id: rust-toolchain
        with:
          components: rust-src
      - uses: actions/cache@v4
        # https://github.com/actions/cache/blob/main/examples.md#rust---cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build
      - run: cargo test

  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - run: cargo clippy --target x86_64-unknown-linux-gnu

  ci-mac:
    runs-on: macos-latest
    strategy:
      matrix:
        rust:
          - stable

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build
      - run: cargo test
